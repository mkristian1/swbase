{"version":3,"sources":["sw-icons/fonts/starwars-glyphicons-webfont.ttf","components/header/index.js","components/header/header.js","services/swapi-data.js","components/loader/loader.js","components/errors/errors.js","components/random-starships/random-starships.js","components/random-starships/index.js","components/random-quotes/index.js","components/random-quotes/random-quotes.js","components/quotes-database/index.js","components/quotes-database/quotes-database.js","components/swapi-service-context/swapi-service-context.js","components/main-content/index.js","components/main-content/main-content.js","components/hoc/with-data.js","components/hoc/with-swapi-data.js","components/item-list/index.js","components/item-list/item-list.js","components/sw-components/item-lists.js","components/item-details/item-details.js","components/sw-components/character-details.js","components/sw-components/planet-details.js","components/sw-components/vehicle-details.js","components/category/characters.js","components/category/planets.js","components/category/vehicles.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Header","className","to","role","type","aria-hidden","SwapiData","_apiBase","_imgBase","getData","url","a","async","fetch","res","ok","Error","status","json","getAllPlanets","allPlanetArr","results","map","transformPlanet","getPlanet","id","PlanetArr","getPlanetImg","getAllCharacter","allCharacterArr","transformCharacter","getCharacter","characterArr","getCharacterImg","getAllVehicles","allVehicleArr","transformVehicle","getVehicle","vehicleArr","getVehicleImg","getAllStarships","AllStarshipsArr","transformStarship","getStarship","starship","getId","name","model","manufacturer","crew","speed","max_atmosphering_speed","people","hairColor","hair_color","height","birthYear","birth_year","mass","planet","population","diameter","rotationPeriod","rotation_period","gravity","vehicle","cost","cost_in_credits","passengers","item","match","Loader","Errors","Fragment","RandomStarships","swapiData","state","loading","error","onStarshipLoaded","setState","onErrors","err","updateStarship","Math","floor","random","then","this","interval","setInterval","clearInterval","onError","preLoader","content","Component","StarshipView","imgUrl","alt","src","RandomQuotes","quotes","randomNumber","length","quote","author","QuotesDatabase","React","createContext","SwapiDataProvider","Provider","SwapiDataConsumer","Consumer","MainContent","left","right","withData","View","data","props","itemData","withSwapiData","Wrapped","mapMethodsToProps","dataProps","ItemList","getSelectedItem","renderLabel","children","label","key","onClick","preloader","withChildFunction","fn","CharacterList","i","PlanetList","VehicleList","Record","feature","ItemDetails","image","updateItem","prevProps","itemId","itemImgUrl","Children","child","cloneElement","img","ViewItem","Characters","selectedId","Helmet","Planets","Vehicles","App","value","basename","process","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7aac347a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/starwars-glyphicons-webfont.7eb176e2.ttf\";","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css';\r\n\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<h3 className=\"app-name\">\r\n\t\t\t\t\t\t\t<i className=\"swg swg-1x swg-starwars\"></i> SW Base\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-8 mt-2\">\r\n\t\t\t\t\t<div className=\"btn-group\" role=\"group\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\">\r\n\t\t\t\t\t\t\t<Link to='/characters'>\r\n\t\t\t\t\t\t\t\t<i className=\"swg swg-darthvader-5\"></i> Characters\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\">\r\n\t\t\t\t\t\t\t<Link to='/planets'>\r\n\t\t\t\t\t\t\t\t<i className=\"swg swg-deathstar-3\"></i>\tPlanets\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\">\r\n\t\t\t\t\t\t\t<Link to='/vehicles'>\r\n\t\t\t\t\t\t\t\t<i className=\"swg swg-atat\" aria-hidden=\"true\"></i>\tVehicles\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;","export default class SwapiData {\r\n\t_apiBase = 'https://swapi.dev/api';\r\n\t_imgBase = 'https://starwars-visualguide.com/assets/img/';\r\n\r\n\tgetData = async (url) => {\r\n\t\tconst res = await fetch(`${this._apiBase}${url}`);\r\n\t\tif (!res.ok) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${res.status}`);\r\n\t\t}\r\n\t\treturn await res.json();\r\n\r\n\t}\r\n\r\n\tgetAllPlanets = async () => {\r\n\t\tconst allPlanetArr = await this.getData('/planets/');\r\n\t\treturn allPlanetArr.results.map(this.transformPlanet);\r\n\t}\r\n\r\n\tgetPlanet = async (id) => {\r\n\t\tconst PlanetArr = await this.getData(`/planets/${id}`);\r\n\t\treturn this.transformPlanet(PlanetArr);\r\n\t}\r\n\r\n\tgetPlanetImg = ({ id }) => {\r\n\t\treturn `${this._imgBase}/planets/${id}.jpg`\r\n\t};\r\n\r\n\r\n\tgetAllCharacter = async () => {\r\n\t\tconst allCharacterArr = await this.getData('/people/');\r\n\t\treturn allCharacterArr.results.map(this.transformCharacter);\r\n\t}\r\n\r\n\tgetCharacter = async (id) => {\r\n\t\tconst characterArr = await this.getData(`/people/${id}`);\r\n\t\treturn this.transformCharacter(characterArr);\r\n\t}\r\n\r\n\tgetCharacterImg = ({ id }) => {\r\n\t\treturn `${this._imgBase}/characters/${id}.jpg`\r\n\t};\r\n\r\n\tgetAllVehicles = async () => {\r\n\t\tconst allVehicleArr = await this.getData('/vehicles/');\r\n\t\treturn allVehicleArr.results.map(this.transformVehicle);\r\n\t}\r\n\r\n\tgetVehicle = async (id) => {\r\n\t\tconst vehicleArr = await this.getData(`/vehicles/${id}`);\r\n\t\treturn this.transformVehicle(vehicleArr);\r\n\t}\r\n\r\n\tgetVehicleImg = ({ id }) => {\r\n\t\treturn `${this._imgBase}/vehicles/${id}.jpg`\r\n\t};\r\n\r\n\tgetAllStarships = async () => {\r\n\t\tconst AllStarshipsArr = await this.getData('/starships/');\r\n\t\treturn AllStarshipsArr.map(this.transformStarship);\r\n\t}\r\n\r\n\tgetStarship = async (id) => {\r\n\t\tconst starship = await this.getData(`/starships/${id}/`);\r\n\t\treturn this.transformStarship(starship);\r\n\t}\r\n\r\n\tgetId(item) {\r\n\t\tconst idRegExp = /\\/([0-9]*)\\/$/;\r\n\t\treturn item.url.match(idRegExp)[1];\r\n\t}\r\n\r\n\ttransformStarship = (starship) => {\r\n\t\treturn {\r\n\t\t\tid: this.getId(starship),\r\n\t\t\tname: starship.name,\r\n\t\t\tmodel: starship.model,\r\n\t\t\tmanufacturer: starship.manufacturer,\r\n\t\t\tcrew: starship.crew,\r\n\t\t\tspeed: starship.max_atmosphering_speed\r\n\r\n\t\t}\r\n\t}\r\n\r\n\ttransformCharacter = (people) => {\r\n\t\treturn {\r\n\t\t\tid: this.getId(people),\r\n\t\t\tname: people.name,\r\n\t\t\thairColor: people.hair_color,\r\n\t\t\theight: people.height,\r\n\t\t\tbirthYear: people.birth_year,\r\n\t\t\tmass: people.mass\r\n\t\t}\r\n\t}\r\n\r\n\ttransformPlanet = (planet) => {\r\n\t\treturn {\r\n\t\t\tid: this.getId(planet),\r\n\t\t\tname: planet.name,\r\n\t\t\tpopulation: planet.population,\r\n\t\t\tdiameter: planet.diameter,\r\n\t\t\trotationPeriod: planet.rotation_period,\r\n\t\t\tgravity: planet.gravity\r\n\t\t}\r\n\t}\r\n\r\n\ttransformVehicle = (vehicle) => {\r\n\t\treturn {\r\n\t\t\tid: this.getId(vehicle),\r\n\t\t\tname: vehicle.name,\r\n\t\t\tmodel: vehicle.model,\r\n\t\t\tmanufacturer: vehicle.manufacturer,\r\n\t\t\tcost: vehicle.cost_in_credits,\r\n\t\t\tpassengers: vehicle.passengers\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n\treturn(\r\n\r\n\t\t<div className=\"artboard\">\r\n  <div className=\"bb8\">\r\n    <div className=\"bb8-body\">\r\n      <div className=\"dot dot-1\">\r\n        <div className=\"line line-1\"></div>\r\n        <div className=\"line line-2\"></div>\r\n        <div className=\"line line-3\"></div>\r\n      </div>\r\n      <div className=\"dot dot-2\"></div>\r\n      <div className=\"circle circle-1\"></div>\r\n      <div className=\"circle circle-2\"></div>\r\n      <div className=\"circle circle-3\"></div>\r\n    </div>\r\n    <div className=\"body-shadow-crop\"> \r\n      <div className=\"body-shadow\"></div>\r\n    </div>\r\n    <div className=\"bb8-head\">\r\n      <div className=\"head-bottom\">\r\n        <div className=\"head-side-1\"></div>\r\n        <div className=\"head-side-2\"></div>\r\n        <div className=\"head-bottom-base\"></div>\r\n      </div>\r\n      <div className=\"head-top-crop\">\r\n        <div className=\"head-top\"></div>\r\n      </div>\r\n      <div className=\"lens\"></div>\r\n      <div className=\"freckle\"></div>\r\n    </div>\r\n    <div className=\"sparkles\">\r\n      <div className=\"one small pulse-1\"></div>\r\n      <div className=\"two blue small pulse-2\"></div>\r\n      <div className=\"three blue med pulse-3\"></div>\r\n      <div className=\"five orange pulse-1\"></div>\r\n      <div className=\"six blue small pulse\"></div>\r\n      <div className=\"seven blue small pulse\"></div>\r\n      <div className=\"eight small pulse-3\"></div>\r\n    </div>\r\n    <div className=\"ground\">\r\n      <div className=\"two\"></div>\r\n      <div className=\"three\">\r\n        <div className=\"bump move-2\"></div>\r\n      </div>\r\n      <div className=\"six\">\r\n        <div className=\"bump move-2\"></div>\r\n      </div>\r\n      <div className=\"seven\">\r\n        <div className=\"bump\"></div>\r\n      </div>\r\n      <div className=\"eight\">\r\n        <div className=\"bump move-1\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\t);\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst Errors = () => {\r\n\treturn(\r\n\t\t<React.Fragment>\r\n\t\t<h1 className=\"mb-1\">\r\n\t\t\tOops! Error 404!\r\n\t\t</h1>\r\n\t\t<h2 className=\"mt-1 mb-1\">\r\n\t\t\tBut don't worry, <span className=\"text-warning\">BB-8</span> fix it <i className=\"swg swg-bb8\" aria-hidden=\"true\"></i>\r\n\t\t</h2>\r\n\t\t</React.Fragment>\r\n\t\t);\r\n}\r\n\r\nexport default Errors;","import React, {Component} from 'react';\r\nimport SwapiData from '../../services/swapi-data';\r\nimport Loader from '../loader/loader';\r\nimport Errors from '../errors/errors';\r\n\r\nexport default class RandomStarships extends Component {\r\n\r\n\tswapiData = new SwapiData();\r\n\r\n\tstate = {\r\n\t\tstarship: {},\r\n\t\tloading: true,\r\n\t\terror: false\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateStarship();\r\n\t\tthis.interval = setInterval(this.updateStarship, 5000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.interval);\r\n\t}\r\n\r\n\tonStarshipLoaded = (starship) => {\r\n\t\tthis.setState({\r\n\t\t\tstarship, \r\n\t\t\tloading: false\r\n\t\t\t});\r\n\t};\r\n\r\n\tonErrors = (err) => {\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t})\r\n\t};\r\n\t\r\n\tupdateStarship = () => {\r\n\t\tconst id = Math.floor(Math.random()* (14 - 9)) + 9;\r\n\r\n\t\tthis.swapiData.getStarship(id)\r\n\t\t.then(\r\n\t\t\tthis.onStarshipLoaded, this.onErrors\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\r\n\t\tconst {starship, loading, error} = this.state;\r\n\t\t\r\n\t\tconst onError = loading && error ? <Errors /> : null;\r\n\t\tconst preLoader = loading ? <Loader /> : null;\r\n\t\tconst content = !loading ? <StarshipView starship={starship} /> : null;\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"random-starships card border-dark mb-3\">\r\n\t\t\t\t {onError}\t\r\n\t\t\t\t {preLoader}\r\n\t\t\t\t {content}          \r\n            </div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nconst StarshipView = ( {starship} ) => {\r\n\tconst { id, name, model,\r\n\t\t\tmanufacturer, crew, \r\n\t\t\tspeed } = starship;\r\n\tconst imgUrl = `https://starwars-visualguide.com\r\n\t\t/assets/img/starships/${id}.jpg`;\r\n\t\t\r\n\treturn(\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t<i className=\"swg swg-falcon-3\"></i> Starships\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<img alt=\"\" className=\"img-planet img-thumbnail\r\n\t\t\t\t\timg-fluid float-lg-right mb-2\" src={imgUrl}/>\r\n\t\t\t\t\t<h4 className=\"card-title\">{name}</h4>\r\n\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t<p className=\"list-group-item list-group-item-action\">\r\n\t\t\t\t\tModel: {model}</p>\r\n\t\t\t\t\t<p className=\"list-group-item list-group-item-action\">\r\n\t\t\t\t\tManufacturer: {manufacturer}</p>\r\n\t\t\t\t\t<p className=\"list-group-item list-group-item-action\">\r\n\t\t\t\t\tCrew: {crew}</p>\r\n\t\t\t\t\t<p className=\"list-group-item list-group-item-action\">\r\n\t\t\t\t\tMax atmosphering speed: {speed}</p>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};","import RandomStarships from './random-starships';\r\n\r\nexport default RandomStarships;","import RandomQuotes from './random-quotes';\r\n\r\nexport default RandomQuotes;","import React from 'react';\r\n\r\nconst RandomQuotes = ({quotes}) => {\r\n\t\r\n\tconst randomNumber = Math.floor(Math.random() * quotes.length);\r\n\r\n\treturn(\r\n\t\t<blockquote className=\"blockquote\">\r\n \t\t\t<p className=\"mb-0\">{quotes[randomNumber].quote}</p>\r\n \t\t \t<footer className=\"blockquote-footer\">{quotes[randomNumber].author}</footer>\r\n \t\t \t\r\n\t\t</blockquote>\r\n\t);\r\n};\r\n\r\nexport default RandomQuotes;","import QuotesDatabase from './quotes-database';\r\n\r\nexport default QuotesDatabase;"," const quotesDatabase = [\r\n\t{ 'quote' : 'The Force will be with you. Always.', \r\n\t 'author' : 'Obi-Wan Kenobi'},\r\n\t{ 'quote' : 'Just for once, let me look on you with my own eyes.',\r\n\t 'author' : 'Darth Vader'},\r\n\t{ 'quote' : 'A long time ago in a galaxy far, far away.',\r\n\t 'author' : 'Title card'},\r\n\t{ 'quote' : 'Someday I will be the most powerful Jedi ever.',\r\n\t 'author' : 'Anakin Skywalker'},\r\n\t{ 'quote' : 'If you strike me down I shall become more powerful than you can possibly imagine.',\r\n\t 'author' : 'Obi-Wan Kenobi'},\r\n\t { 'quote' : 'It’s the ship that made the Kessel run in less than twelve parsecs. I’ve outrun Imperial starships. Not the local bulk cruisers, mind you. I’m talking about the big Corellian ships, now. She’s fast enough for you, old man.',\r\n\t 'author' : 'Han Solo'},\r\n\t { 'quote' : 'Fear is the path to the dark side. Fear leads to anger; anger leads to hate; hate leads to suffering. I sense much fear in you.',\r\n\t 'author' : 'Yoda'}\r\n\t];\r\n\r\nexport default quotesDatabase;","import React from 'react';\r\n\r\nconst { \r\n    Provider: SwapiDataProvider,\r\n    Consumer: SwapiDataConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    SwapiDataProvider,\r\n    SwapiDataConsumer\r\n};","import MainContent from './main-content';\r\n\r\nexport default MainContent;","import React from 'react';\r\n\r\nconst MainContent = ({ left, right }) => {\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-6 mb-4\">\r\n\t\t\t\t{left}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-6 mb-3\">\r\n\t\t\t\t{right}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MainContent;","import React, { Component } from 'react';\r\n\r\n\r\nconst withData = (View) => {\r\n    return class extends Component {\r\n        state = {\r\n            data: [],\r\n            loading: true,\r\n            error: false\r\n        };\r\n\r\n        onErrors = (err) => {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        };\r\n\r\n        componentDidMount() {\r\n\r\n            this.props.itemData().then(data => {\r\n                this.setState({\r\n                    data,\r\n                    loading: false\r\n                });\r\n            }, this.onErrors);\r\n        }\r\n\r\n        render() {\r\n\r\n            const { data, loading, error } = this.state;\r\n\r\n            return <View {...this.props} data={data}\r\n                loading={loading} error={error} />;\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default withData;","import React from 'react';\r\nimport { SwapiDataConsumer } from '../swapi-service-context';\r\n\r\nconst withSwapiData = (Wrapped, mapMethodsToProps) => {\r\n    return (props) => {\r\n        return (\r\n            <SwapiDataConsumer>\r\n                {\r\n                    (swapiData) => {\r\n                        const dataProps = mapMethodsToProps(swapiData);\r\n                        return (\r\n                            <Wrapped {...props} {...dataProps} />\r\n                        )\r\n                    }\r\n                }\r\n            </SwapiDataConsumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withSwapiData;","import ItemList from './item-list';\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport './item-list.css';\r\nimport Loader from '../loader/loader';\r\nimport Errors from '../errors/errors';\r\n\r\n\r\nconst ItemList = (props) =>  {\t\t\r\n\r\n\t\tconst {data, loading, error, getSelectedItem,\r\n\t\t\t   children: renderLabel} = props;\r\n\r\n\t\tconst itemData = data.map((item) => {\r\n\t\t\tconst {id} = item;\r\n\t\t\tconst label = renderLabel(item);\r\n\t\t\t\r\n\t\t\treturn(\r\n\t\t\t<li key={id} className=\"list-group-item d-flex \r\n\t\t\tjustify-content-between align-items-center\"\r\n\t\t\tonClick={() => getSelectedItem(id)}>\r\n\t\t\t\t{label}\r\n\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t\tconst onError = loading && error ? <Errors /> : null;\t\t\r\n\t\tconst preloader = loading ? <Loader /> : null;\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"item-list card\">\r\n\t\t\t\t<ul className=\"list-group\">\t\t\t\t\t\r\n\t\t\t\t\t{onError}\r\n\t\t\t\t\t{preloader}\r\n\t\t\t\t\t{itemData}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\r\n};\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport {withData, withSwapiData} from '../hoc';\r\nimport ItemList from '../item-list';\r\n\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n    return (props) => {\r\n        return (\r\n            <Wrapped {...props}>\r\n                {fn}\r\n            </Wrapped>\r\n        );\r\n    };\r\n};\r\n\r\nconst renderCharacter = (i) => (`${i.name} - (${i.birthYear})`);\r\nconst renderPlanet = (i) => (`${i.name} - (${i.diameter})`);\r\nconst renderVehicle = (i) => (`${i.name} - (${i.model})`);\r\n\r\nconst mapCharacterMethodsToProps  = (swapiData) => {\r\n    return {\r\n        itemData: swapiData.getAllCharacter\r\n    }\r\n}\r\nconst mapPlanetMethodsToProps  = (swapiData) => {\r\n    return {\r\n        itemData: swapiData.getAllPlanets\r\n    }\r\n}\r\nconst mapVehicleMethodsToProps  = (swapiData) => {\r\n    return {\r\n        itemData: swapiData.getAllVehicles\r\n    }\r\n}\r\n\r\nconst CharacterList = withSwapiData(withData(\r\n    withChildFunction(ItemList, renderCharacter)), mapCharacterMethodsToProps);\r\n\r\nconst PlanetList = withSwapiData(withData(\r\n    withChildFunction(ItemList, renderPlanet)), mapPlanetMethodsToProps);\r\n\r\nconst VehicleList = withSwapiData(withData(\r\n    withChildFunction(ItemList, renderVehicle)), mapVehicleMethodsToProps);\r\n\r\nexport {\r\n    CharacterList,\r\n    PlanetList,\r\n    VehicleList\r\n}\r\n","import React, { Component } from 'react';\r\nimport './item-details.css';\r\nimport Loader from '../loader/loader';\r\nimport Errors from '../errors/errors';\r\n\r\n\r\nconst Record = ({ item, feature, label }) => {\r\n\treturn (\r\n\t\t<p className=\"list-group-item list-group-item-action\">\r\n\t\t\t{label}: {item[feature]}\r\n\t\t</p>\r\n\t);\r\n}\r\n\r\nclass ItemDetails extends Component {\r\n\r\n\tstate = {\r\n\t\titem: [],\r\n\t\timage: null,\r\n\t\tloading: true,\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateItem();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.itemId !== prevProps.itemId) {\r\n\t\t\tthis.updateItem();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateItem() {\r\n\t\tconst { itemId, itemData, itemImgUrl } = this.props;\r\n\r\n\t\titemData(itemId)\r\n\t\t\t.then(item => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titem,\r\n\t\t\t\t\timage: itemImgUrl(item),\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t});\r\n\t\t\t}, this.onErrors)\r\n\r\n\t}\r\n\r\n\tonErrors = () => {\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { item, image, error, loading } = this.state;\r\n\r\n\t\tconst children = React.Children.map(this.props.children, (child) => {\r\n\t\t\treturn React.cloneElement(child, { item });\r\n\t\t});\r\n\r\n\t\tconst onError = loading && error ? <Errors /> : null;\r\n\t\tconst preLoader = loading ? <Loader /> : null;\r\n\t\tconst content = !loading && !error ? <ViewItem children={children} item={item} img={image} /> : null;\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"item-details\">\r\n\t\t\t\t<div className=\"card border-primary mb-3\">\r\n\t\t\t\t\t{onError}\r\n\t\t\t\t\t{preLoader}\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\n\r\nconst ViewItem = ({ item, img, children }) => {\r\n\tconst { name } = item;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<h4 className=\"card-title mb-0\">\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<img className=\"float-md-right img-fluid rounded\" alt={name} src={img} />\r\n\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\n\r\nexport {\r\n\tRecord,\r\n\tItemDetails\r\n}\r\n","import React from 'react';\r\nimport { ItemDetails, Record } from '../item-details';\r\nimport { withSwapiData } from '../hoc/';\r\n\r\nconst CharacterDetails = (props) => {\r\n\r\n    return (\r\n        <ItemDetails {...props} >\r\n            <Record feature=\"birthYear\" label=\"Birth Year\" />\r\n            <Record feature=\"height\" label=\"Height\" />\r\n            <Record feature=\"hairColor\" label=\"Hair Color\" />\r\n        </ItemDetails >\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiData) => {\r\n    return {\r\n        itemData: swapiData.getCharacter,\r\n        itemImgUrl: swapiData.getCharacterImg\r\n    }\r\n}\r\n\r\nexport default withSwapiData(CharacterDetails, mapMethodsToProps);","import React from 'react';\r\nimport { ItemDetails, Record } from '../item-details';\r\nimport { withSwapiData } from '../hoc/';\r\n\r\nconst PlanetDetails = (props) => {\r\n\r\n    return (\r\n        <ItemDetails {...props} >\r\n            <Record feature=\"diameter\" label=\"Diameter\" />\r\n            <Record feature=\"rotationPeriod\" label=\"Rotation Period\" />\r\n            <Record feature=\"population\" label=\"Population\" />\r\n        </ItemDetails >\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiData) => {\r\n    return {\r\n        itemData: swapiData.getPlanet,\r\n        itemImgUrl: swapiData.getPlanetImg\r\n    }\r\n}\r\n\r\nexport default withSwapiData(PlanetDetails, mapMethodsToProps);","import React from 'react';\r\nimport { ItemDetails, Record } from '../item-details';\r\nimport { withSwapiData } from '../hoc/';\r\n\r\nconst VehicleDetails = (props) => {\r\n\r\n    return (\r\n        <ItemDetails {...props} >\r\n            <Record feature=\"model\" label=\"Model\" />\r\n            <Record feature=\"manufacturer\" label=\"Manufacturer\" />\r\n            <Record feature=\"passengers\" label=\"Passengers\" />\r\n        </ItemDetails >\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiData) => {\r\n    return {\r\n        itemData: swapiData.getVehicle,\r\n        itemImgUrl: swapiData.getVehicleImg\r\n    }\r\n}\r\n\r\nexport default withSwapiData(VehicleDetails, mapMethodsToProps);","import React, { Component } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport MainContent from '../main-content';\r\nimport { CharacterDetails } from '../sw-components';\r\nimport { CharacterList } from '../sw-components/item-lists';\r\n\r\nexport default class Characters extends Component {\r\n    state = {\r\n        selectedId: 1,\r\n    };\r\n\r\n    getSelectedItem = (id) => {\r\n        this.setState({\r\n            selectedId: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <Helmet>\r\n                <title>Characters {this.state.selectedId}</title>\r\n                            \r\n            </Helmet>\r\n            <MainContent\r\n                left={<CharacterList getSelectedItem={this.getSelectedItem} />}\r\n                right={<CharacterDetails itemId={this.state.selectedId} />}>\r\n            </MainContent>\r\n            </>\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport MainContent from '../main-content';\r\nimport { PlanetDetails } from '../sw-components';\r\nimport { PlanetList } from '../sw-components/item-lists';\r\n\r\nexport default class Planets extends Component {\r\n    state = {\r\n        selectedId: 9,\r\n    };\r\n\r\n    getSelectedItem = (id) => {\r\n        this.setState({\r\n            selectedId: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MainContent\r\n                left={<PlanetList getSelectedItem={this.getSelectedItem} />}\r\n                right={<PlanetDetails itemId={this.state.selectedId} />}>\r\n            </MainContent>\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport MainContent from '../main-content';\r\nimport { VehicleDetails } from '../sw-components';\r\nimport { VehicleList } from '../sw-components/item-lists';\r\n\r\nexport default class Vehicles extends Component {\r\n    state = {\r\n        selectedId: 6,\r\n    };\r\n\r\n    getSelectedItem = (id) => {\r\n        this.setState({\r\n            selectedId: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MainContent\r\n                left={<VehicleList getSelectedItem={this.getSelectedItem} />}\r\n                right={<VehicleDetails itemId={this.state.selectedId} />}>\r\n            </MainContent>\r\n        );\r\n    };\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from '../header';\r\n\r\nimport RandomStarships from '../random-starships';\r\nimport RandomQuotes from '../random-quotes';\r\nimport QuotesDatabase from '../quotes-database';\r\nimport './app.css';\r\nimport SwapiData from '../../services/swapi-data';\r\nimport { SwapiDataProvider } from '../swapi-service-context'\r\nimport { Characters, Planets, Vehicles } from '../category';\r\n\r\nexport default class App extends Component {\r\n\r\n\tswapiData = new SwapiData();\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SwapiDataProvider value={this.swapiData}>\r\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t\t\t<div className=\"sw-app\">\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<Route path='/' exact>\r\n\t\t\t\t\t\t<Characters />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/characters'>\r\n\t\t\t\t\t\t\t<Characters />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/planets'>\r\n\t\t\t\t\t\t\t<Planets />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/vehicles'>\r\n\t\t\t\t\t\t\t<Vehicles />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-12 mb-4\">\r\n\t\t\t\t\t\t\t\t<RandomStarships />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<RandomQuotes quotes={QuotesDatabase} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</SwapiDataProvider>\r\n\t\t);\r\n\t}\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\nimport './sw-icons/fonts/starwars-glyphicons-webfont.ttf';\nimport './sw-icons/css/starwars-glyphicons.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}